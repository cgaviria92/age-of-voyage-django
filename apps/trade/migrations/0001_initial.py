# Generated by Django 5.1.1 on 2025-09-03 01:54

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('exploration', '0001_initial'),
        ('players', '0001_initial'),
        ('ships', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField()),
                ('category', models.CharField(choices=[('luxury', 'Artículos de Lujo'), ('spices', 'Especias'), ('precious', 'Metales Preciosos'), ('textiles', 'Textiles'), ('weapons', 'Armas'), ('food', 'Alimentos'), ('raw_materials', 'Materias Primas'), ('exotic', 'Productos Exóticos'), ('contraband', 'Contrabando')], max_length=20)),
                ('weight', models.IntegerField(help_text='Peso por unidad')),
                ('base_price', models.IntegerField(help_text='Precio base por unidad')),
                ('price_volatility', models.FloatField(default=0.2, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('required_level', models.IntegerField(default=1)),
                ('is_legal', models.BooleanField(default=True, help_text='¿Es legal comerciar con este recurso?')),
            ],
            options={
                'verbose_name': 'Recurso',
                'verbose_name_plural': 'Recursos',
                'ordering': ['category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Market',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size', models.CharField(choices=[('small', 'Pequeño'), ('medium', 'Mediano'), ('large', 'Grande'), ('metropolis', 'Metrópolis')], default='medium', max_length=20)),
                ('specialization', models.CharField(blank=True, choices=[('luxury', 'Artículos de Lujo'), ('spices', 'Especias'), ('precious', 'Metales Preciosos'), ('textiles', 'Textiles'), ('weapons', 'Armas'), ('food', 'Alimentos'), ('raw_materials', 'Materias Primas'), ('exotic', 'Productos Exóticos'), ('contraband', 'Contrabando')], max_length=20)),
                ('prosperity_level', models.IntegerField(default=50, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('region', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='market', to='exploration.region')),
            ],
            options={
                'verbose_name': 'Mercado',
                'verbose_name_plural': 'Mercados',
            },
        ),
        migrations.CreateModel(
            name='PriceHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.IntegerField()),
                ('recorded_at', models.DateTimeField(auto_now_add=True)),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='exploration.region')),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='price_history', to='trade.resource')),
            ],
            options={
                'verbose_name': 'Historial de Precios',
                'verbose_name_plural': 'Historiales de Precios',
                'ordering': ['-recorded_at'],
            },
        ),
        migrations.CreateModel(
            name='TradeRoute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('distance', models.IntegerField(help_text='Distancia en millas náuticas')),
                ('danger_level', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('base_travel_time', models.DurationField(help_text='Tiempo base de viaje')),
                ('required_ship_speed', models.IntegerField(default=0)),
                ('required_level', models.IntegerField(default=1)),
                ('is_active', models.BooleanField(default=True)),
                ('discovery_date', models.DateTimeField(auto_now_add=True)),
                ('destination', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trade_routes_destination', to='exploration.region')),
                ('discovered_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='players.player')),
                ('origin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trade_routes_origin', to='exploration.region')),
            ],
            options={
                'verbose_name': 'Ruta Comercial',
                'verbose_name_plural': 'Rutas Comerciales',
                'unique_together': {('origin', 'destination')},
            },
        ),
        migrations.CreateModel(
            name='TradeMission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('planning', 'Planificando'), ('loading', 'Cargando'), ('traveling', 'Viajando'), ('selling', 'Vendiendo'), ('returning', 'Regresando'), ('completed', 'Completada'), ('failed', 'Fallida'), ('cancelled', 'Cancelada')], default='planning', max_length=20)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('departure_time', models.DateTimeField(blank=True, null=True)),
                ('estimated_arrival', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('initial_investment', models.IntegerField(default=0)),
                ('final_profit', models.IntegerField(default=0)),
                ('total_expenses', models.IntegerField(default=0)),
                ('events_log', models.TextField(blank=True)),
                ('hull_damage_taken', models.IntegerField(default=0)),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trade_missions', to='players.player')),
                ('ship', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ships.ship')),
                ('trade_route', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trade.traderoute')),
            ],
            options={
                'verbose_name': 'Misión Comercial',
                'verbose_name_plural': 'Misiones Comerciales',
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='TradeMissionCargo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('purchase_price', models.IntegerField()),
                ('selling_price', models.IntegerField(blank=True, null=True)),
                ('total_cost', models.IntegerField()),
                ('total_revenue', models.IntegerField(blank=True, null=True)),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trade.resource')),
                ('trade_mission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cargo_items', to='trade.trademission')),
            ],
            options={
                'verbose_name': 'Carga de Misión Comercial',
                'verbose_name_plural': 'Cargas de Misiones Comerciales',
                'unique_together': {('trade_mission', 'resource')},
            },
        ),
    ]
