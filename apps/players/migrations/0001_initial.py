# Generated by Django 5.1.1 on 2025-09-03 01:54

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('captain_name', models.CharField(max_length=100, unique=True)),
                ('level', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('experience', models.IntegerField(default=0)),
                ('gold', models.IntegerField(default=1000)),
                ('reputation', models.CharField(choices=[('marine', 'Marina Real'), ('merchant', 'Comerciante'), ('privateer', 'Corsario'), ('pirate', 'Pirata'), ('explorer', 'Explorador')], default='merchant', max_length=20)),
                ('total_battles_won', models.IntegerField(default=0)),
                ('total_battles_lost', models.IntegerField(default=0)),
                ('total_trade_profit', models.IntegerField(default=0)),
                ('regions_discovered', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_active', models.DateTimeField(auto_now=True)),
                ('navigation_skill', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)])),
                ('combat_skill', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)])),
                ('trade_skill', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)])),
                ('leadership_skill', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)])),
                ('diplomacy_skill', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)])),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Jugador',
                'verbose_name_plural': 'Jugadores',
                'ordering': ['-level', '-experience'],
            },
        ),
        migrations.CreateModel(
            name='PlayerSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notifications_enabled', models.BooleanField(default=True)),
                ('auto_repair_ships', models.BooleanField(default=False)),
                ('preferred_language', models.CharField(default='es', max_length=10)),
                ('music_enabled', models.BooleanField(default=True)),
                ('sound_effects_enabled', models.BooleanField(default=True)),
                ('player', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='settings', to='players.player')),
            ],
            options={
                'verbose_name': 'Configuración de Jugador',
                'verbose_name_plural': 'Configuraciones de Jugadores',
            },
        ),
        migrations.CreateModel(
            name='PlayerAchievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('achievement_type', models.CharField(choices=[('combat', 'Combate'), ('trade', 'Comercio'), ('exploration', 'Exploración'), ('social', 'Social'), ('milestone', 'Hito')], max_length=20)),
                ('earned_at', models.DateTimeField(auto_now_add=True)),
                ('gold_reward', models.IntegerField(default=0)),
                ('experience_reward', models.IntegerField(default=0)),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='achievements', to='players.player')),
            ],
            options={
                'verbose_name': 'Logro',
                'verbose_name_plural': 'Logros',
                'unique_together': {('player', 'name')},
            },
        ),
    ]
