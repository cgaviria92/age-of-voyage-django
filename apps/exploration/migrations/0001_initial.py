# Generated by Django 5.1.1 on 2025-09-02 23:33

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Exploration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "exploration_type",
                    models.CharField(
                        choices=[
                            ("survey", "Survey Area"),
                            ("treasure_hunt", "Treasure Hunt"),
                            ("mapping", "Cartography"),
                            ("resource_search", "Resource Search"),
                        ],
                        max_length=20,
                    ),
                ),
                ("started_at", models.DateTimeField(auto_now_add=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "progress",
                    models.PositiveIntegerField(
                        default=0,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                    ),
                ),
                ("success", models.BooleanField(default=False)),
                ("experience_gained", models.PositiveIntegerField(default=0)),
                ("resources_found", models.JSONField(default=dict)),
            ],
            options={
                "verbose_name": "Exploration",
                "verbose_name_plural": "Explorations",
                "db_table": "exploration_exploration",
            },
        ),
        migrations.CreateModel(
            name="PlayerDiscovery",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("discovered_at", models.DateTimeField(auto_now_add=True)),
                (
                    "exploration_experience_gained",
                    models.PositiveIntegerField(default=0),
                ),
            ],
            options={
                "verbose_name": "Player Discovery",
                "verbose_name_plural": "Player Discoveries",
                "db_table": "exploration_playerdiscovery",
            },
        ),
        migrations.CreateModel(
            name="Region",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "location_type",
                    models.CharField(
                        choices=[
                            ("port", "Port City"),
                            ("island", "Island"),
                            ("ocean", "Open Ocean"),
                            ("strait", "Strait"),
                            ("bay", "Bay"),
                            ("reef", "Reef"),
                            ("hideout", "Pirate Hideout"),
                        ],
                        max_length=20,
                    ),
                ),
                ("description", models.TextField()),
                ("latitude", models.DecimalField(decimal_places=7, max_digits=10)),
                ("longitude", models.DecimalField(decimal_places=7, max_digits=10)),
                (
                    "is_discovered",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this region is known by default",
                    ),
                ),
                (
                    "discovery_difficulty",
                    models.PositiveIntegerField(
                        default=1,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(10),
                        ],
                    ),
                ),
                ("has_market", models.BooleanField(default=False)),
                ("has_shipyard", models.BooleanField(default=False)),
                ("has_tavern", models.BooleanField(default=False)),
                (
                    "pirate_activity",
                    models.PositiveIntegerField(
                        default=1,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(10),
                        ],
                    ),
                ),
                (
                    "weather_risk",
                    models.PositiveIntegerField(
                        default=1,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(10),
                        ],
                    ),
                ),
                (
                    "available_resources",
                    models.JSONField(
                        default=list, help_text="List of resource types available"
                    ),
                ),
                (
                    "image",
                    models.ImageField(blank=True, null=True, upload_to="regions/"),
                ),
            ],
            options={
                "verbose_name": "Region",
                "verbose_name_plural": "Regions",
                "db_table": "exploration_region",
            },
        ),
        migrations.CreateModel(
            name="TravelRoute",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "distance",
                    models.PositiveIntegerField(help_text="Distance in nautical miles"),
                ),
                (
                    "travel_time",
                    models.PositiveIntegerField(help_text="Base travel time in hours"),
                ),
                (
                    "difficulty",
                    models.PositiveIntegerField(
                        default=1,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(10),
                        ],
                    ),
                ),
                ("requires_navigation_skill", models.PositiveIntegerField(default=1)),
                ("weather_affected", models.BooleanField(default=True)),
                ("pirate_encounters", models.BooleanField(default=False)),
            ],
            options={
                "verbose_name": "Travel Route",
                "verbose_name_plural": "Travel Routes",
                "db_table": "exploration_travelroute",
            },
        ),
        migrations.CreateModel(
            name="WorldRegion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                (
                    "region_type",
                    models.CharField(
                        choices=[
                            ("caribbean", "Caribbean"),
                            ("atlantic", "Atlantic"),
                            ("mediterranean", "Mediterranean"),
                            ("pacific", "Pacific"),
                            ("arctic", "Arctic"),
                            ("hideout", "Pirate Hideout"),
                        ],
                        max_length=20,
                    ),
                ),
                ("description", models.TextField()),
                ("climate", models.CharField(max_length=50)),
                (
                    "danger_level",
                    models.PositiveIntegerField(
                        default=1,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(10),
                        ],
                    ),
                ),
            ],
            options={
                "verbose_name": "World Region",
                "verbose_name_plural": "World Regions",
                "db_table": "exploration_worldregion",
            },
        ),
    ]
