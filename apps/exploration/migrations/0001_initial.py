# Generated by Django 5.1.1 on 2025-09-03 01:54

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('players', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ExplorationEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('event_type', models.CharField(choices=[('treasure', 'Tesoro Encontrado'), ('storm', 'Tormenta'), ('pirates', 'Ataque Pirata'), ('merchant', 'Comerciante Encontrado'), ('island', 'Isla Secreta'), ('monster', 'Monstruo Marino'), ('natives', 'Nativos Amigables'), ('shipwreck', 'Naufragio'), ('whirlpool', 'Remolino'), ('calm', 'Aguas Tranquilas')], max_length=20)),
                ('probability', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('gold_effect', models.IntegerField(default=0)),
                ('experience_effect', models.IntegerField(default=0)),
                ('hull_damage', models.IntegerField(default=0)),
                ('required_region_type', models.CharField(blank=True, choices=[('island', 'Isla'), ('port', 'Puerto'), ('ocean', 'Océano Abierto'), ('strait', 'Estrecho'), ('bay', 'Bahía'), ('archipelago', 'Archipiélago'), ('reef', 'Arrecife'), ('cave', 'Cueva Marina'), ('lagoon', 'Laguna'), ('atoll', 'Atolón')], max_length=20)),
                ('required_climate', models.CharField(blank=True, choices=[('tropical', 'Tropical'), ('temperate', 'Templado'), ('arctic', 'Ártico'), ('desert', 'Desértico'), ('stormy', 'Tormentoso')], max_length=20)),
            ],
            options={
                'verbose_name': 'Evento de Exploración',
                'verbose_name_plural': 'Eventos de Exploración',
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField()),
                ('region_type', models.CharField(choices=[('island', 'Isla'), ('port', 'Puerto'), ('ocean', 'Océano Abierto'), ('strait', 'Estrecho'), ('bay', 'Bahía'), ('archipelago', 'Archipiélago'), ('reef', 'Arrecife'), ('cave', 'Cueva Marina'), ('lagoon', 'Laguna'), ('atoll', 'Atolón')], max_length=20)),
                ('climate', models.CharField(choices=[('tropical', 'Tropical'), ('temperate', 'Templado'), ('arctic', 'Ártico'), ('desert', 'Desértico'), ('stormy', 'Tormentoso')], max_length=20)),
                ('difficulty', models.CharField(choices=[('easy', 'Fácil'), ('medium', 'Medio'), ('hard', 'Difícil'), ('extreme', 'Extremo'), ('legendary', 'Legendario')], max_length=20)),
                ('x_coordinate', models.IntegerField()),
                ('y_coordinate', models.IntegerField()),
                ('exploration_cost', models.IntegerField(default=50)),
                ('danger_level', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('base_gold_reward', models.IntegerField(default=0)),
                ('base_experience_reward', models.IntegerField(default=100)),
                ('required_level', models.IntegerField(default=1)),
                ('required_ship_speed', models.IntegerField(default=0)),
                ('is_discovered', models.BooleanField(default=False)),
                ('discovery_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Región',
                'verbose_name_plural': 'Regiones',
                'ordering': ['difficulty', 'required_level', 'name'],
            },
        ),
        migrations.CreateModel(
            name='RegionResource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('abundance', models.CharField(choices=[('rare', 'Raro'), ('uncommon', 'Poco Común'), ('common', 'Común'), ('abundant', 'Abundante')], max_length=20)),
                ('base_price_modifier', models.FloatField(default=1.0)),
            ],
            options={
                'verbose_name': 'Recurso de Región',
                'verbose_name_plural': 'Recursos de Regiones',
            },
        ),
        migrations.CreateModel(
            name='ExplorationMission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('preparing', 'Preparando'), ('in_progress', 'En Progreso'), ('completed', 'Completada'), ('failed', 'Fallida'), ('cancelled', 'Cancelada')], default='preparing', max_length=20)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('estimated_duration', models.DurationField()),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('gold_earned', models.IntegerField(default=0)),
                ('experience_earned', models.IntegerField(default=0)),
                ('hull_damage_taken', models.IntegerField(default=0)),
                ('result_description', models.TextField(blank=True)),
                ('events_encountered', models.ManyToManyField(blank=True, to='exploration.explorationevent')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exploration_missions', to='players.player')),
            ],
            options={
                'verbose_name': 'Misión de Exploración',
                'verbose_name_plural': 'Misiones de Exploración',
                'ordering': ['-started_at'],
            },
        ),
    ]
